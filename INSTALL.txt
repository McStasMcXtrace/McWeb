# ================================================ #
*  Install - McStas and the (optional) Webserver   *
*  ---------------------------------------------   *
*        Debian 7.1 iso 64bit (DL+install)         *
*         use ifconfig to find ip address          *
# ================================================ #

System Setup
------------

1) Get mcwww through github:

    sudo apt-get install git
    (go to source root)
    git clone https://github.com/McStasMcXtrace/mcwww

2) mcwww build dependencies:

    sudo apt-get install:

        xbase-clients (?)
        nginx-full (?)

        libopenmpi-dev
        python-pip

        r-base (for rplot)

    pip install:

        django 1.8
        simplejson
        rpy2 (for rplot)

3) Get mcstas/mxtrace through github
    
    git clone https://github.com/McStasMcXtrace/McCode

4) Follow the instructions in BUILD_DEPS.TXT in the McCode root dir.


Setting up Django Webserver
---------------------------

5) Create the server dir and copy the server files into it, you are playing in the root dir now so you have to 
   sudo everything or run as root, change the permissions at the end if you don't like running round your 
   system as su:
     sudo mkdir /srv/mcstas-django
     sudo cp -rp /root/trunk/tools/Python/www/www-django/mcwww/ /srv/mcstas-django

6) Move to your shiny new working directory (the one you just made). Run:

    sudo bin/get-dependencies.sh

7) Make a <Group_Dir> in sim/ and populate sim/<Group_Dir> with at least one instr - 

    sudo cp /usr/local/lib/mcstas-2.0/examples/<choose_one_or_more>.instr sim/<Group_Dir>

    - sidenote_1:   You will need to login to <IP ADDRESS>:<PORT>/admin (after creating your users) and put users
                    in groups so they can run simulations. Groups correspond to <Group_Dir> names.

    - sidenote_2:   Ensure your keyboard is set to a locale that the python scripts are happy with:

                    export LC_ALL="en_US.UTF-8"

8) Run:
    ./bin/init-db.sh

9) Follow the prompts, you should set up a superuser to start with, step (10)a) shows how to create new users:

    Username (leave blank to use 'root'):
    E-mail address:
    Password:
    Password (again):
    Superuser created successfully.

10) Run the following commands (put the runworker in the background with '&' or open a new terminal):
    a)  ./manage.py createuser <USERNAME> <PASSWORD>
    b)  ./manage.py generate_docs
    c)  ./bin/update-simulations.sh (NOT MANDATORY: compiles instruments)
    d)  ./manage.py populate_db
    e)  sudo ./manage.py runworker &
    f)  sudo ./manage.py runserver

    - sidenote_3:   When you have compiled the instruments (step (10)b) ) you should copy the .html files into the <GROUP>
                    folder. This keeps everything tidy, although the server will find them in any of the referenced subfolders
                    from where you run step (10)c & d).

Adding a Simulation to the DB
-----------------------------

- If you wish to create a new group of simulations follow step (7) to 10b-d). Remember to put your
  user in groups that you wish them to be able to select simulations from.
- Otherwise put your .instr file(s) in an existing group and perform step (10)b-d).
- Upon reopening the configuration page the new simulations should be available to the users in the correct
  groups.
