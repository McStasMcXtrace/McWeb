# ================================================ #
*  Install - McStas and the (optional) Webserver   *
*  ---------------------------------------------   *
*        Debian 7.1 iso 64bit (DL+install)         *
*         use ifconfig to find ip address          *
# ================================================ #

System Setup
------------

1) Get mcwww through github:

    sudo apt-get install git
    (go to source root)
    git clone https://github.com/McStasMcXtrace/mcwww

2) mcwww build dependencies:

    sudo apt-get install:

        xbase-clients (?)
        nginx-full (?)

        libopenmpi-dev
        python-pip

        r-base (for rplot)

    sudo pip install:

        django 1.8
        simplejson
        rpy2 (for rplot)

3) Get mcstas/mxtrace by installing it via apt-get (see e.g. http://mcstas.org)
   or through github:
    
    git clone https://github.com/McStasMcXtrace/McCode

4) If you used git under 3, follow the instructions in BUILD_DEPS.TXT in the McCode root dir.


Setting up Django Webserver
---------------------------

5) Ensure your keyboard is set to a locale that the python scripts are happy with:

    export LC_ALL="en_US.UTF-8"

6) Move to your shiny new working directory (the one you just made). Run:

    sudo bin/get-dependencies.sh

7) Select a "group name" and populate the folder sim/<Group_Dir> with at least one instrument. 
   You must add users to groups through the admin interface (<IP ADDRESS>:<PORT>/admin).
   Groups correspond to <Group_Dir> names.

8) From the project root folder, run:

    ./manage.py syncdb

9) Follow the prompts, you should set up a superuser to start with, step (10)a) shows how to 
   create new users:

    Username (leave blank to use 'root'):
    E-mail address:
    Password:
    Password (again):
    Superuser created successfully.

10) Run the following commands (put the runworker in the background with '&' or open a new terminal):
    a)  ./manage.py createuser <USERNAME> <PASSWORD> (optionally append group names to add users to these groups)
    b)  ./manage.py generate_docs
    c)  ./bin/update-simulations.sh (this script simply compiles instruments)
    d)  ./manage.py populate_db
    e)  ./manage.py runworker &
    f)  ./manage.py runserver

    - sidenote_3:   When you have compiled the instruments (step (10)b) ) you should copy the .html files into the <GROUP>
                    folder. This keeps everything tidy, although the server will find them in any of the referenced subfolders
                    from where you run step (10)c & d).

Adding a Simulation to the DB
-----------------------------

- If you wish to create a new group of simulations follow step (7) to 10b-d). Remember to put your
  user in groups that you wish them to be able to select simulations from.
- Otherwise put your .instr file(s) in an existing group and perform step (10)b-d).
- Upon reopening the configuration page the new simulations should be available to the users in the correct
  groups.
